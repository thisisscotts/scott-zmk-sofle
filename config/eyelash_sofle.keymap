#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

// Custom includes
#include "key_labels.h"

// Mouse/scroll globals 
&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;     // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <1000>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

// Homerow mods

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < ... >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < ... >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };
};

// Combos

/ {
    combos {
        compatible = "zmk,combos";
        combo_toglayer1 {
            timeout-ms = <40>;
            key-positions = <57 59>;
            bindings = <&tog 1>;
        };
        combo_toglayer2 {
            timeout-ms = <40>;
            key-positions = <56 60>;
            bindings = <&tog 2>;
        };
        combo_home {
            timeout-ms = <30>;
            key-positions = <28 29>;
            bindings = <&kp HOME>;
        };
        combo_end {
            timeout-ms = <30>;
            key-positions = <35 36>;
            bindings = <&kp END>;
        };
        combo_delete {
            timeout-ms = <30>;
            key-positions = <29 30>;
            bindings = <&kp DELETE>;
        };
        combo_refresh {
            timeout-ms = <30>;
            key-positions = <15 16>;
            bindings = <&kp F5>;
        };
        combo_l_curly {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp LBRC>;
        };
        combo_r_curly {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp RBRC>;
        };
        combo_l_bracket {
            timeout-ms = <30>;
            key-positions = <42 43>;
            bindings = <&kp LBKT>;
        };
        combo_r_bracket {
            timeout-ms = <30>;
            key-positions = <47 48>;
            bindings = <&kp RBKT>;
        };
        combo_plus {
            timeout-ms = <30>;
            bindings = <&kp PLUS>;
            key-positions = <17 21>;
        };
        combo_equals {
            timeout-ms = <30>;
            bindings = <&kp EQUAL>;
            key-positions = <30 34>;
        };
        combo_minus {
            timeout-ms = <30>;
            bindings = <&kp MINUS>;
            key-positions = <43 47>;
        };
    };
};

/ {
    macros {
        pers_email: pers_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            bindings
                = <&macro_tap &kp T &kp H &kp I &kp S &kp DOT &kp I &kp S &kp DOT &kp S &kp C &kp O &kp T &kp T &kp S &kp DOT &kp E &kp M &kp A &kp I &kp L &kp DOT &kp A &kp D &kp D &kp R &kp E &kp S &kp S &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };
        work_email: work_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            bindings
                = <&macro_tap &kp S &kp C &kp O &kp T &kp T &kp M &kp O &kp R &kp G &kp A &kp N &kp AT &kp C &kp H &kp E &kp V &kp R &kp O &kp N &kp DOT &kp C &kp O &kp M >;
        };
    };
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5           &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp MINUS
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T            &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F   &kp G            &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B            &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp BACKSPACE    &kp ENTER        &kp SPACE  &mo 2      &trans     &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp TILDE   &kp F1      &kp F2      &kp F3      &kp F4      &kp F5       &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&kp LC(C)   &kp GRAVE   &kp PG_UP   &kp UP      &kp PG_DN   &mkp MB4     &mmv MOVE_DOWN   &trans           &kp N7           &kp N8      &kp N9     &trans            &kp EQUAL
&kp LC(V)   &kp TILDE   &kp LEFT    &kp DOWN    &kp RIGHT   &mkp MB5     &mmv MOVE_LEFT   &trans           &kp N4           &kp N5      &kp N6     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp ENTER   &trans      &trans      &trans      &trans      &trans       &mmv MOVE_RIGHT  &trans           &kp N1           &kp N2      &kp N3     &trans            &trans
&kp C_MUTE  &trans      &trans      &trans      &trans      &kp SPACE    &mkp LCLK        &trans           &kp N0           &kp DOT     &trans     &trans
            >;

            display-name = "LAYER1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp GRAVE       &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2        &bt BT_SEL 3    &bt BT_SEL 4    &trans      &kp F6          &kp F7          &kp F8      &kp F9      &kp F10      &trans
&trans          &bt BT_CLR      &bt BT_CLR_ALL  &trans              &rgb_ug RGB_HUI &rgb_ug RGB_HUD &trans      &trans          &trans          &kp F11     &kp F12     &kp UNDER    &kp PLUS
&trans          &out OUT_USB    &out OUT_BLE    &trans              &rgb_ug RGB_SPI &rgb_ug RGB_SPD &trans      &trans          &trans          &work_email &pers_email &kp LBRC     &kp RBRC
&rgb_ug RGB_OFF &rgb_ug RGB_ON  &rgb_ug RGB_EFF &rgb_ug RGB_EFR     &rgb_ug RGB_BRI &rgb_ug RGB_BRD &trans      &trans          &trans          &trans      &trans      &trans       &trans
&trans          &trans          &trans          &trans              &trans          &trans          &trans      &trans          &trans          &sys_reset  &soft_off   &bootloader
            >;

            display-name = "LAYER2";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "LAYER3";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
